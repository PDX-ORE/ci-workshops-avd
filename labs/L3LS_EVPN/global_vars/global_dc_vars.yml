---
# Credentials for EOS Switches
ansible_user: arista
ansible_password: "{{ (lookup('file', '/home/coder/.config/code-server/config.yaml', errors='ignore') | from_yaml).password | default(lookup('ansible.builtin.env', 'LABPASSPHRASE')) }}"
ansible_network_os: arista.eos.eos
# Configure privilege escalation
ansible_become: true
ansible_become_method: enable
# HTTPAPI configuration
ansible_connection: httpapi
ansible_httpapi_port: 443
ansible_httpapi_use_ssl: true
ansible_httpapi_validate_certs: false
ansible_python_interpreter: $(which python3)

# arista.avd.cv_deploy role parameters
# Export token using 'export CV_TOKEN=<generated token here>'
cv_token: "{{ lookup('env', 'CV_TOKEN') }}"
cv_server: cvp
cv_verify_certs: false

# TerminAttr settings
cv_settings:
  onprem_clusters:
    - name: atd-cvp
      servers:
        - name: 192.168.0.5
  terminattr:
    disable_aaa: true

# AAA settings and local users
aaa_settings:
  authorization:
    exec:
      default: local
  local_users:
    - name: arista
      privilege: 15
      role: network-admin
      sha512_password: "{{ ansible_password | password_hash('sha512', salt='arista', rounds=5000) }}"
      ssh_key: "{{ lookup('ansible.builtin.file', '~/.ssh/id_rsa.pub') }}"

# OOB Management network default gateway.
mgmt_gateway: 192.168.0.1
mgmt_interface_vrf: default
mgmt_interface: Management0

# NTP Servers IP or DNS name, first NTP server will be preferred, and sourced from Management VRF
ntp_settings:
  servers:
    - name: 192.168.0.1
      iburst: true

# DNS settings
dns_settings:
  domain: atd.lab
  servers:
    - ip_address: 192.168.0.1

# Point to Point Links MTU Override for Lab
p2p_uplinks_mtu: 1500

# Set IPv4 Underlay Routing and EVPN Overlay Routing to use eBGP
underlay_routing_protocol: ebgp
overlay_routing_protocol: ebgp

# Configure password authentication for BGP peerings
bgp_peer_groups:
  evpn_overlay_peers:
    password: Q4fqtbqcZ7oQuKfuWtNGRQ==
  ipv4_underlay_peers:
    password: 7x4B4rnJhZB438m9+BrBfQ==
  mlag_ipv4_underlay_peer:
    password: 4b21pAdCvWeAqpcKDFMdWw==

# # L3 Edge port definitions. This can be any port in the entire Fabric, where IP interfaces are defined.
# l3_edge:
#   # Define a new IP pool that will be used to assign IP addresses to L3 Edge interfaces.
#   p2p_links_ip_pools:
#     - name: S1_to_S2_IP_pool
#       ipv4_pool: 172.16.255.0/24
#   # Define a new link profile which will match the IP pool, the used ASNs and include the defined interface into underlay routing
#   p2p_links_profiles:
#     - name: S1_to_S2_profile
#       ip_pool: S1_to_S2_IP_pool
#       as: [ 65103, 65203 ]
#       include_in_underlay_protocol: true
#   # Define each P2P L3 link and link the nodes, the interfaces and the profile used.
#   p2p_links:
#     - id: 1
#       nodes: [ s1-brdr1, s2-brdr1 ]
#       interfaces: [ Ethernet4, Ethernet4 ]
#       profile: S1_to_S2_profile
#     - id: 2
#       nodes: [ s1-brdr2, s2-brdr2 ]
#       interfaces: [ Ethernet5, Ethernet5 ]
#       profile: S1_to_S2_profile
